<!DOCTYPE HTML>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Highcharts Example</title>

		<style type="text/css">

		</style>
	</head>
	<body>
<!-- <script src="https://code.highcharts.com/highcharts.js"></script> -->
<!-- <script src="https://code.highcharts.com/modules/series-label.js"></script> -->
<!-- <script src="https://code.highcharts.com/modules/exporting.js"></script> -->
<!-- <script src="https://code.highcharts.com/modules/export-data.js"></script> -->
<script
  src="https://code.jquery.com/jquery-3.3.1.min.js"
  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
  crossorigin="anonymous"></script>




<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>



	<script type="text/javascript">

			coin = window.location.href;
			c = coin.split('/')[6];
			var btcprice = [];
			var usdprice = [];
			var date = [];
			var volume = [];
			var marketcap = [];
			

				
		$.when($.getJSON("http://localhost/test/public_html/app/views/coin/usdprice.php?coin=" + c), $.getJSON("http://localhost/test/public_html/app/views/coin/btcprice.php?coin=" + c), $.getJSON("http://localhost/test/public_html/app/views/coin/marketcap.php?coin=" + c)).done(function(r1, r2, r3){
			if (r1[0] != "no datas"){
			
				usdData = JSON.parse(r1[0])
			
				for(i=0; i <= usdData.length - 1; i++){
					time = new Date(usdData[i]["time"] * 1000).toString(),
					x = time.split(" ")[0] + " " + time.split(" ")[1] + " " + time.split(" ")[2] + " " + time.split(" ")[3], 
					close = usdData[i]["close"],
					usdprice.push([usdData[i]["time"] * 1000, close]),
					<!-- date.push(x), -->
					<!-- date.push(usdData[i]["time"] * 1000), -->
					volume.push([usdData[i]["time"] * 1000, usdData[i]["volumeto"]])
					
				}
				
				
				if(c != 'btc'){
					btcData = JSON.parse(r2[0])
			
					for(i=0; i <= usdData.length - 1; i++){
						
						close = btcData[i]["close"],
						btcprice.push([usdData[i]["time"] * 1000, close])
					}
				
				}
				
				
				
				capData = JSON.parse(r3[0])
				for(i=0; i <= usdData.length - 1; i++){
					close = usdData[i]["close"] * capData['circulating_supply'],
					marketcap.push([usdData[i]["time"] * 1000, close])
				}
				
				myfunc()
				chart.hideLoading()
				
				
			}else{
				chart.hideLoading()
				chart.showLoading("No datas ... Try again later")
			}
			

			
		});
				
			

		var chart = Highcharts.chart('container', {
			chart: {
				zoomType: 'x',
				 alignTicks: false
			},
			
			loading : {
				style : {
					background:"#292b2c4a"
				}
			},
			
			credits : {
				enabled:false
			},
			
			rangeSelector: {
				allButtonsEnabled: true,
				selected: 2
			},
			
			title: {
				text: c.toUpperCase() + " Chart"
			},
			
			
						
			xAxis: {
				title: {
					text: 'Date'
				},
                type: 'datetime',
				gapGridLineWidth: 0
				
            },
			yAxis: [{ // Primary yAxis
				labels: {
					 formatter: function () {
						return '$ ' + this.value;
					},
					style: {
						color: Highcharts.getOptions().colors[2]
					}
				},
				title: {
					text: 'Price (USD)',
					style: {
						color: Highcharts.getOptions().colors[2]
					}
				},
				opposite: true,
				height: '65%'

			}, { // Secondary yAxis
				gridLineWidth: 0,
				title: {
					text: 'Price (BTC)',
					style: {
						color: Highcharts.getOptions().colors[0]
					}
				},
				labels: {
					 formatter: function () {
						return  this.value + ' BTC';
					},
					style: {
						color: Highcharts.getOptions().colors[0]
					}
				},
				height: '65%'

			}, 
			{ // Tertiary yAxis
				gridLineWidth: 0,
				title: {
					text: 'Market Cap',
					style: {
						color: Highcharts.getOptions().colors[1]
					}
				},
				labels: {
					 <!-- formatter: function () { -->
						<!-- return '$ ' + this.value; -->
					<!-- }, -->
					style: {
						color: Highcharts.getOptions().colors[1]
					}
				},
				opposite: true,
				height: '65%'
			},
			
			{
				labels: {
					align: 'right',
					x: -3,
					style: {
						color: Highcharts.getOptions().colors[5]
					}
				},
				title: {
					text: '24h Volume'
				},
				top: '70%',
				height: '30%',
				offset: 0,
				lineWidth: 2
			}],
			
			tooltip: {
				shared: true,
				crosshairs:true
				
			},
			legend: {
				layout: 'horizontal',
				align: 'center',
				x: 0,
				verticalAlign: 'bottom',
				y: 0,
				floating: true,
				backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'
			},
			
			
			
			series: [
			
			]
			


		});
		

		

			
			
		chart.showLoading("Loading...");	
		
					
		function myfunc(){
			series1 = {
				name: 'BTC',
				type: 'spline',
				yAxis: 0,
				data: btcprice,
				marker: {
					enabled: false
				},
				tooltip: {
					valueSuffix: ' BTC'
				}

			},
			
			series2 = { 
				name: 'USD',
				type: 'spline',
				yAxis: 1,
				data: usdprice,
				marker: {
					enabled: false
				},
				tooltip: {
					valueSuffix: ' USD'
				}

			},
			
			series3 = { 
				name: 'Marketcap',
				type: 'spline',
				yAxis: 2,
				data: marketcap,
				marker: {
					enabled: false
				},
				tooltip: {
					valueSuffix: ' USD'
				}

			},
			
			series4 ={
			type: 'column',
			name: 'Volume',
			data: volume,
			yAxis: 3,
			<!-- dataGrouping: { -->
				<!-- units: groupingUnits -->
				<!-- } -->
			}
			chart.addSeries(series3)
			chart.addSeries(series1)
			chart.addSeries(series2)
			chart.addSeries(series4)
		};
		

		
			
	
		
	</script>
	</body>
</html>
