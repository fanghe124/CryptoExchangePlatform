<?php $currency = getCurrencyDetail()?>
<script>
                  function formatLegendValue(graphDataItem, valueText) {
                    return '<?php echo $currency['symbol']?>' + valueText;
                  }

    function formatDecimal(r) {
        return r;
    }
    function formatBallon(e, a) {
        var t;
        if ("candlestick" == a.type) {
            var o = '<?php echo $currency['symbol']?>' + formatDecimal(e.values.open),
                l = '<?php echo $currency['symbol']?>' + formatDecimal(e.values.high),
                i = '<?php echo $currency['symbol']?>' + formatDecimal(e.values.low),
                r = '<?php echo $currency['symbol']?>' + formatDecimal(e.values.close)
                open = 'Open',
                high = 'High',
                close = 'Close',
                low = 'Low';

            t = '<?php echo $coin['symbol']?>' + '<hr><table class="charts-tooltip"><tbody><tr><td class="right-align">' + open + ":</td><td><b>" + o + '</b></td></tr><tr><td class="right-align">' + high + ":</td><td><b>" + l + '</b></td></tr><tr><td class="right-align">' + low + ":</td><td><b>" + i + '</b></td></tr><tr><td class="right-align">' + close + ":</td><td><b>" + r + "</b></td></tr></tbody></table>"
        } else {
            var n = formatDecimal(e.values.value);
            t = '<?php echo $coin['symbol']?>' + "<hr>" + TEXT.close + ": <b>" + '<?php echo $currency['symbol']?>' + n + "</b>"
        }
        return t
    }

     var chart;
                    function init_coin_chart() {
                    cH = (new Date).getUTCHours();
                    pM = (new Date).getUTCMinutes();
                    SYMBOL = '<?php echo $coin['symbol']?>';
                        var primaryColor = '<?php echo config('primary-color', '#0275D8')?>';
                        var secondaryColor = '#DD9A57';

                      var chartOptions = {
                        type: 'stock',
                        categoryAxesSettings: {
                          minPeriod: 'mm',
                          color: secondaryColor,
                          gridColor: primaryColor, // vertical grid color
                          gridAlpha: 0.1,
                          gridThickness: 1,
                          groupToPeriods: ["15mm", "30mm", "DD", "WW", "MM"],
                          equalSpacing: !0 // skip time gaps
                        },

                        dataSets: [{
                            dataLoader: {
                                url: baseUrl + 'load/history?symbol=' + SYMBOL,
                                format: "json",
                                postProcess: function(e, a, t) {
                                    var response = e;
                                    if (typeof response != 'undefined') {

                                        var $table = $('.historical-data-table');
                                        var $tbody = $table.find('tbody');
                                        $tbody.html('')
                                        var history = response;
                                        //history.reverse();
                                        var n = history.length;
                                        for (var i=0; i<n; i++) {
                                          if (history[i].value > 0) {
                                            $tbody.append('<tr>' +
                                              '<td>' + history[i].date_fmt + '</td>' +
                                              '<td class="right-align"><sup><?php echo getCurrencySymbol()?></sup>' + history[i].value_fmt + '</td>' +
                                              '<td class="right-align" data-order="' + history[i].volume + '">' + history[i].volume_fmt + ' <?php echo $coin['symbol']?></td>' +
                                              '</tr>');
                                          }
                                        }
                                        $('.historical-data-table').DataTable({
                                        "order": [[ 0, "desc" ]]
                                        });
                                    }
                                    return e;
                                }
                            },
                          title: '<?php echo $coin['symbol']?>',
                          fieldMappings: [{
                            fromField: 'value',
                            toField: 'value'
                          },
                           {
                            fromField: 'volume',
                            toField: 'volume'
                          }],
                          categoryField: 'date'
                        }],

                        panelsSettings: {
                          usePrefixes: true,
                          creditsPosition: 'bottom-left'
                        },

                        panels: [{
                          showCategoryAxis: true,
                          title: 'Price',
                          percentHeight: 70,
                          precision: 2,
                          drawingIconsEnabled: true,
                          eraseAll: true,
                          eraseAll:!0,
                          stockGraphs: [ {
                            id: 'g1',
                            type: "smoothedLine",
                            valueField: 'value',
                            "proCandlesticks": true,
                            lineColor: primaryColor,
                            fillAlphas: 0.15,
                            lineThickness: 2,
                            comparable: true,
                            compareField: 'value',
                            balloonText: '[[title]]: <b>' + '<?php echo $currency['symbol']?>' + '[[value]]</b>',
                            compareGraphBalloonText: '[[title]]: <b>' + '<?php echo $currency['symbol']?>' + '[[value]]</b>',
                            useDataSetColors: false
                          }],
                          stockLegend: {
                            periodValueTextComparing: '[[percents.value.close]]%',
                            periodValueTextRegular: '[[value.close]]',
                            color: secondaryColor,
                            valueFunction: formatLegendValue,
                            numberFormatter: {precision:-1, decimalSeparator:'.', thousandsSeparator:','}
                          },
                          valueAxes: [{
                            position: 'right',
                            color: secondaryColor, // color of values
                            gridColor: primaryColor, //horizontal grid line color
                            gridAlpha: 0.1,
                            gridThickness: 1
                          }]
                        }, {
                          title: '<?php _lang('volume')?>',
                          percentHeight: 30,
                          precision: 0,
                          stockGraphs: [ {
                            valueField: 'volume',
                            type: 'column',
                            showBalloon: false,
                            periodValue: "Sum",
                            lineColor: primaryColor,
                            fillAlphas: 0.3,
                            useDataSetColors: false
                          } ],
                          stockLegend: {
                            periodValueTextRegular: '[[value.close]]',
                            valueFunction: formatLegendValue,
                            numberFormatter: {precision:-1, decimalSeparator:'.', thousandsSeparator:','}
                          },
                          valueAxes: [{
                            position: 'right',
                            gridColor: primaryColor, //horizontal grid line color
                            gridAlpha: 0.1,
                            gridThickness: 1
                          }]
                        }],

                        chartScrollbarSettings: {
                          graph: 'g1',
                          graphFillColor: primaryColor,
                          graphFillAlpha: 0.4,
                          selectedGraphFillColor: primaryColor,
                          selectedGraphFillAlpha: 1,
                          enabled:1
                        },

                        chartCursorSettings: {
                          valueBalloonsEnabled: true,
                          graphBulletSize: 1,
                          valueLineBalloonEnabled: true,
                          valueLineEnabled: true,
                          valueLineAlpha: 1,
                          categoryBalloonColor: primaryColor,
                          categoryBalloonAlpha: 0.8,
                          cursorColor: primaryColor,
                          cursorAlpha: 0.8
                        },

                        periodSelector: {
                          position: 'top',
                          periodsText: '',
                          inputFieldsEnabled: false, //disable dates input
                          periods: [
                          {
                            period: 'DD',
                            count: 7,
                            label: '1W'
                          },{
                            period: 'MM',
                            count: 1,
                            label: '1M'
                          },{
                            period: 'MM',
                            count: 3,
                            label: '3M'
                          },{
                            period: 'DD',
                            count: 60,
                            label: '6M'
                          },{
                            period: 'DD',
                            count: 340,
                            label: '1Y'
                          }, {
                            period: 'MAX',
                            label: '<?php _lang('all')?>',
                            selected: true
                          }]
                        },

                        dataSetSelector: {
                          position: '' // leave empty to hide the native dataSet selection control
                        },

                        comparedDataSets: [],

                        export: {
                          enabled: true
                        },

                        listeners: [{
                          event: 'init',
                          method: function () {

                            // add chart background image when the chart is initialized
                            $('#coin-chart-container').find('.amcharts-stock-panel-div-stockPanel0 .amcharts-main-div')
                              .prepend('<div style="background: url(<?php echo url($coin['logo'])?>) no-repeat center center; position: absolute; width: 100%; height: 100%; opacity: 0.18;"></div>');
                          }
                        },{
                            event : 'rendered',
                            method : function() {
                                $('#coin-chart-preloader').fadeOut();
                            }
                        }]
                      };

                        $('#coin-chart-preloader').fadeIn();
                        chart = AmCharts.makeChart('coin-chart-container', chartOptions);

                        //return false;


                    }

                    function load_compare(t) {
                        var symbols = $(t).val();
                        //var symobls = symbols.split(",")
                        $.each(symbols, function(e,n){

                            addComparison(n);
                        });

                        $.each(loadedComparisonSeries, function(e,n) {
                            if (jQuery.inArray(n, symbols) == -1) {
                                removeComparison(n);
                            }
                        });
                    }

                var loadedComparisonSeries = [];
                function addComparison(symbol) {

                    if (typeof chart != 'undefined') {
                     $('#coin-chart-preloader').fadeIn();
                      // if symbol is not added to comparison already (in which case the data would be already loaded)
                      if ($.inArray(symbol, loadedComparisonSeries) == -1) {
                        loadedComparisonSeries.push(symbol);

                        // load historical data for given symbol
                        $.getJSON(baseUrl + 'load/history?symbol=' + symbol, function (response) {
                          if (typeof response != 'undefined') {
                            var dataSet = {
                              title: symbol,
                              compared: true,
                              fieldMappings: [{
                                fromField: 'value',
                                toField: 'value'
                              }, {
                                fromField: 'volume',
                                toField: 'volume'
                              }
                              ],
                              dataProvider: response,
                              categoryField: 'date'
                            };

                            chart.dataSets.push(dataSet);
                            chart.comparedDataSets.push(dataSet);
                            chart.validateData();
                            $('#coin-chart-preloader').fadeOut();

                          } else {

                          }
                        });
                        // If data was already loaded before just add it to comparison
                      } else {
                        for (var i = 0; i < chart.dataSets.length; i++) {
                          if (chart.dataSets[i].title == symbol) {
                            chart.dataSets[i].compared = true;
                          }
                        }
                        $('#coin-chart-preloader').fadeOut();
                        chart.validateData();

                      }
                    }
                  }

                    function removeComparison(symbol) {
                        for (var i = 0; i < chart.dataSets.length; i++) {
                          if (chart.dataSets[i].title == symbol) {
                            chart.dataSets[i].compared = false;
                          }
                        }
                        chart.validateData();
                      }
                </script>
<div class="" style="margin-bottom: 10px;width: 200px;overflow: hidden;height: 60px">
    <span><?php _lang('compare-to')?> </span>
    <select onchange="load_compare(this)" multiple class="form-control select2 from" style="width: 100% !important;">
        <?php foreach(get_all_coins() as $dcoin):?>
            <?php if($coin['symbol'] != $dcoin['symbol']):?>
                <option  value="<?php echo $dcoin['symbol']?>"><?php echo $dcoin['symbol']?></option>
            <?php endif?>
        <?php endforeach?>
    </select>
</div>
<div id="coin-chart" class="coin-chart">

    <div id="coin-chart-preloader" style="position: absolute;height: 100%;width: 100%;display:none">
        <div class="css-loader" style="margin: 20% auto"></div>
    </div>
    <div id="coin-chart-container"></div>
</div>